apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  serviceName: "mongodb"
  replicas: {{ .Values.containers.mongo.replicas }}
  selector:
    matchLabels:
      io.kompose.service: mongodb
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/compose-default: "true"
        io.kompose.service: mongodb
        app: mongodb
    spec:
      containers:
        - args:
            - mongod
            - --noauth
          name: {{ .Values.containers.mongo.name }}
          image: "{{ .Values.containers.mongo.registry }}/{{ .Values.containers.mongo.image }}:{{ .Values.containers.mongo.version }}"
          envFrom:
            - configMapRef:
                name: env
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-claim0
          resources:
            limits:
              cpu: {{ .Values.containers.mongo.resources.limits.cpu }}
              memory: {{ .Values.containers.mongo.resources.limits.memory }}
            requests:
              cpu: {{ .Values.containers.mongo.resources.requests.cpu }}
              memory: {{ .Values.containers.mongo.resources.requests.memory }}
      restartPolicy: Always
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: mongodb-claim0
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
